// <auto-generated />
using System;
using Air_3550;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Air_3550.Migrations
{
    [DbContext(typeof(AirContext))]
    partial class AirContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Air_3550.Models.Airport", b =>
                {
                    b.Property<int>("AirportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirportCode")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AirportId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<int?>("RouteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.HasKey("AirportId");

                    b.HasIndex("AirportId1");

                    b.HasIndex("RouteId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("Air_3550.Models.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DestinationAirportId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OriginAirportId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlaneTypePlaneId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RouteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TicketsPurchased")
                        .HasColumnType("INTEGER");

                    b.HasKey("FlightId");

                    b.HasIndex("DestinationAirportId");

                    b.HasIndex("OriginAirportId");

                    b.HasIndex("PlaneTypePlaneId");

                    b.HasIndex("RouteId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Air_3550.Models.Plane", b =>
                {
                    b.Property<int>("PlaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxDistance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxSeats")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.HasKey("PlaneId");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Air_3550.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DestinationAirportId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OriginAirportId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RouteId");

                    b.HasIndex("DestinationAirportId");

                    b.HasIndex("OriginAirportId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Air_3550.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ConnectedFlightFlightId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConnectedRouteRouteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId2")
                        .HasColumnType("INTEGER");

                    b.HasKey("TicketId");

                    b.HasIndex("ConnectedFlightFlightId");

                    b.HasIndex("ConnectedRouteRouteId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.HasIndex("UserId2");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Air_3550.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreditBalance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreditCardNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerNumber")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("PointsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PointsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserRole")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Air_3550.Models.Airport", b =>
                {
                    b.HasOne("Air_3550.Models.Airport", null)
                        .WithMany("ConnectedAirports")
                        .HasForeignKey("AirportId1");

                    b.HasOne("Air_3550.Models.Route", null)
                        .WithMany("Connections")
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("Air_3550.Models.Flight", b =>
                {
                    b.HasOne("Air_3550.Models.Airport", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationAirportId");

                    b.HasOne("Air_3550.Models.Airport", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginAirportId");

                    b.HasOne("Air_3550.Models.Plane", "PlaneType")
                        .WithMany()
                        .HasForeignKey("PlaneTypePlaneId");

                    b.HasOne("Air_3550.Models.Route", null)
                        .WithMany("Flights")
                        .HasForeignKey("RouteId");

                    b.Navigation("Destination");

                    b.Navigation("Origin");

                    b.Navigation("PlaneType");
                });

            modelBuilder.Entity("Air_3550.Models.Route", b =>
                {
                    b.HasOne("Air_3550.Models.Airport", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationAirportId");

                    b.HasOne("Air_3550.Models.Airport", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginAirportId");

                    b.Navigation("Destination");

                    b.Navigation("Origin");
                });

            modelBuilder.Entity("Air_3550.Models.Ticket", b =>
                {
                    b.HasOne("Air_3550.Models.Flight", "ConnectedFlight")
                        .WithMany()
                        .HasForeignKey("ConnectedFlightFlightId");

                    b.HasOne("Air_3550.Models.Route", "ConnectedRoute")
                        .WithMany()
                        .HasForeignKey("ConnectedRouteRouteId");

                    b.HasOne("Air_3550.Models.User", null)
                        .WithMany("TicketsBooked")
                        .HasForeignKey("UserId");

                    b.HasOne("Air_3550.Models.User", null)
                        .WithMany("TicketsCanceled")
                        .HasForeignKey("UserId1");

                    b.HasOne("Air_3550.Models.User", null)
                        .WithMany("TicketsTaken")
                        .HasForeignKey("UserId2");

                    b.Navigation("ConnectedFlight");

                    b.Navigation("ConnectedRoute");
                });

            modelBuilder.Entity("Air_3550.Models.Airport", b =>
                {
                    b.Navigation("ConnectedAirports");
                });

            modelBuilder.Entity("Air_3550.Models.Route", b =>
                {
                    b.Navigation("Connections");

                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Air_3550.Models.User", b =>
                {
                    b.Navigation("TicketsBooked");

                    b.Navigation("TicketsCanceled");

                    b.Navigation("TicketsTaken");
                });
#pragma warning restore 612, 618
        }
    }
}
